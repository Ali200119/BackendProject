// <auto-generated />
using System;
using Allup.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Allup.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220727165957_initialProject")]
    partial class initialProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Allup.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "banner-1.png",
                            Name = "Redmi 6 Pro"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "banner-2.png",
                            Name = "Headphone"
                        });
                });

            modelBuilder.Entity("Allup.Models.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId1");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("Allup.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 521, DateTimeKind.Local).AddTicks(5207),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-1.jpg",
                            Title = "This is First Post For XipBlog"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 521, DateTimeKind.Local).AddTicks(6031),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-2.jpg",
                            Title = "This is Second Post For XipBlog"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 521, DateTimeKind.Local).AddTicks(6056),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-3.jpg",
                            Title = "This is Third Post For XipBlog"
                        });
                });

            modelBuilder.Entity("Allup.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "brand-1.jpg",
                            IsDeleted = false,
                            Name = "Ostrich Cafe"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "brand-2.jpg",
                            IsDeleted = false,
                            Name = "Golden"
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "brand-3.jpg",
                            IsDeleted = false,
                            Name = "Norcold"
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "brand-4.jpg",
                            IsDeleted = false,
                            Name = "Climb The Mountain"
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "brand-5.jpg",
                            IsDeleted = false,
                            Name = "David Smith"
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "brand-6.jpg",
                            IsDeleted = false,
                            Name = "Avant Agarde"
                        });
                });

            modelBuilder.Entity("Allup.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "category-1.jpg",
                            IsDeleted = false,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "category-2.jpg",
                            IsDeleted = false,
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "category-3.jpg",
                            IsDeleted = false,
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "category-4.jpg",
                            IsDeleted = false,
                            Name = "Game Consoles"
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "category-5.jpg",
                            IsDeleted = false,
                            Name = "Headphones"
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "category-6.jpg",
                            IsDeleted = false,
                            Name = "Monitor"
                        },
                        new
                        {
                            Id = 7,
                            ImageURL = "category-7.jpg",
                            IsDeleted = false,
                            Name = "Audio & Video"
                        },
                        new
                        {
                            Id = 8,
                            ImageURL = "category-8.jpg",
                            IsDeleted = false,
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 9,
                            ImageURL = "category-9.jpg",
                            IsDeleted = false,
                            Name = "Appliances"
                        },
                        new
                        {
                            Id = 10,
                            ImageURL = "category-10.jpg",
                            IsDeleted = false,
                            Name = "Camera"
                        },
                        new
                        {
                            Id = 11,
                            ImageURL = "category-11.jpg",
                            IsDeleted = false,
                            Name = "Cases"
                        },
                        new
                        {
                            Id = 12,
                            ImageURL = "category-12.jpg",
                            IsDeleted = false,
                            Name = "Home Tech"
                        },
                        new
                        {
                            Id = 13,
                            ImageURL = "category-13.jpg",
                            IsDeleted = false,
                            Name = "Notebooks"
                        },
                        new
                        {
                            Id = 14,
                            ImageURL = "category-14.jpg",
                            IsDeleted = false,
                            Name = "Tops & Sets"
                        });
                });

            modelBuilder.Entity("Allup.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Allup.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Allup.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsBestseller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComputer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGameConsoles")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewArrival")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmartphone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 3,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 519, DateTimeKind.Local).AddTicks(7803),
                            IsBestseller = true,
                            IsComputer = true,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            Name = "Cale 6 eu accumsan massa facilisis Madden by Steve",
                            Price = 11.9
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4072),
                            DiscountPrice = 21.899999999999999,
                            IsBestseller = true,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = true,
                            IsNewArrival = false,
                            IsSmartphone = false,
                            Name = "Originals Kaval Wind breaker Winter Jacket eu...",
                            Price = 23.899999999999999
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 6,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4321),
                            IsBestseller = true,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            Name = "Madden by Steve Madden Cale 6 eu accumsan massa...",
                            Price = 11.9
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4510),
                            IsBestseller = true,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = false,
                            IsSmartphone = true,
                            Name = "Water and Wind Resistant Insulated Jacket eu massa",
                            Price = 11.9
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 4,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4523),
                            IsBestseller = true,
                            IsComputer = true,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            Name = "Juicy Couture Solid Sleeve Puffer Jacket eu accumsan..",
                            Price = 18.899999999999999
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4530),
                            IsBestseller = true,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsGameConsoles = true,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            Name = "Cale 6 eu accumsan massa facilisis Madden by Steve",
                            Price = 29.899999999999999
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 4,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4542),
                            IsBestseller = false,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            Name = "Winter Jacket eu accumsan massa facili originals Kaval Wind breaker",
                            Price = 23.899999999999999
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4543),
                            IsBestseller = false,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = true,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            Name = "Juicy Couture Juicy Quilted Terry Track Jacket eu...",
                            Price = 35.899999999999999
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4545),
                            IsBestseller = true,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            Name = "Trans-Weight Hooded Wind and Water Resistant Shell",
                            Price = 11.9
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 5,
                            CategoryId = 14,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4546),
                            IsBestseller = false,
                            IsComputer = true,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = false,
                            IsSmartphone = false,
                            Name = "New Balance Fresh Foam Kaymin eu accumsan massa...",
                            Price = 11.9
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 5,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4548),
                            IsBestseller = false,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            Name = "New Balance Fresh Foam LAZR v1 Sport eu accumsan...",
                            Price = 18.899999999999999
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 6,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 59, 57, 520, DateTimeKind.Local).AddTicks(4589),
                            DiscountPrice = 26.100000000000001,
                            IsBestseller = true,
                            IsComputer = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsGameConsoles = true,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            Name = "New Balance Arishi Sport v1Couture Juicy eu",
                            Price = 29.0
                        });
                });

            modelBuilder.Entity("Allup.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecond")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "product-1.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "product-2.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "product-3.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "product-4.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "product-5.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "product-6.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 7,
                            ImageURL = "product-7.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 8,
                            ImageURL = "product-8.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 9,
                            ImageURL = "product-3.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 10,
                            ImageURL = "product-9.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 11,
                            ImageURL = "product-10.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 12,
                            ImageURL = "product-11.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 13,
                            ImageURL = "product-12.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 14,
                            ImageURL = "product-16.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 15,
                            ImageURL = "product-6.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 16,
                            ImageURL = "product-13.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 17,
                            ImageURL = "product-14.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 18,
                            ImageURL = "product-15.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 19,
                            ImageURL = "product-9.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 12
                        });
                });

            modelBuilder.Entity("Allup.Models.Quotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email@yourwebsitename.com",
                            ImageURL = "author-1.png",
                            Name = "John Doe",
                            Quote = " An has feugiat vivendum, ad vix tacimates accusamus, cum commune lucilius no. Sit at alia civibus indoctum, ea mel regione percipit adipisci. Per modus nostrum vituperata no, eam ne magna solum constituam."
                        },
                        new
                        {
                            Id = 2,
                            Email = "ElonMusk@gmail.com",
                            ImageURL = "author-2.jpg",
                            Name = "Elon Musk",
                            Quote = "Some people don't like change, but you need to embrace change if the alternative is disaster."
                        },
                        new
                        {
                            Id = 3,
                            Email = "info@sony.com",
                            ImageURL = "author-3.png",
                            Name = "Sony Pla",
                            Quote = "Play Has No Limits."
                        });
                });

            modelBuilder.Entity("Allup.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Explore and immerse in exciting 360 content with Fulldive’s all-in-one virtual reality platform",
                            ImageURL = "slider-1.jpg",
                            Profit = "Save $120 when you buy",
                            Title = "<span>4K2020 Virtual Reality</span>Fulldive VR."
                        },
                        new
                        {
                            Id = 2,
                            Description = "Explore and immerse in exciting 360 content with Fulldive’s all-in-one virtual reality platform",
                            ImageURL = "slider-2.jpg",
                            Profit = "Save $120 when you buy",
                            Title = "<span>4K HDR Smart TV 43 </span>Sony Bravia."
                        });
                });

            modelBuilder.Entity("Allup.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Allup.Models.BasketItem", b =>
                {
                    b.HasOne("Allup.Models.Product", "Product")
                        .WithMany("BasketItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Allup.Models.User", "User")
                        .WithMany("BasketItems")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("Allup.Models.Order", b =>
                {
                    b.HasOne("Allup.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("Allup.Models.OrderItem", b =>
                {
                    b.HasOne("Allup.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Allup.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Allup.Models.Product", b =>
                {
                    b.HasOne("Allup.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Allup.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Allup.Models.ProductImage", b =>
                {
                    b.HasOne("Allup.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
