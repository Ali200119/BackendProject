// <auto-generated />
using System;
using Allup.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Allup.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220809104852_initialProject")]
    partial class initialProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Allup.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "banner-1.png",
                            Name = "Redmi 6 Pro"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "banner-2.png",
                            Name = "Headphone"
                        });
                });

            modelBuilder.Entity("Allup.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-1.jpg",
                            Title = "This is First Post For XipBlog"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-2.jpg",
                            Title = "This is Second Post For XipBlog"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-3.jpg",
                            Title = "This is Third Post For XipBlog"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Simply dummy text of the printing and typesetting industry.Lorem Ipsum...",
                            ImageURL = "blog-4.jpg",
                            Title = "This is Fourth Post For XipBlog"
                        });
                });

            modelBuilder.Entity("Allup.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "brand-1.jpg",
                            Name = "Ostrich Cafe"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "brand-2.jpg",
                            Name = "Golden"
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "brand-3.jpg",
                            Name = "Norcold"
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "brand-4.jpg",
                            Name = "Climb The Mountain"
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "brand-5.jpg",
                            Name = "David Smith"
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "brand-6.jpg",
                            Name = "Avant Agarde"
                        });
                });

            modelBuilder.Entity("Allup.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(4720),
                            ImageURL = "category-1.jpg",
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(6626),
                            ImageURL = "category-2.jpg",
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(6712),
                            ImageURL = "category-3.jpg",
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(6733),
                            ImageURL = "category-4.jpg",
                            Name = "Game Consoles"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(7432),
                            ImageURL = "category-5.jpg",
                            Name = "Headphones"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8043),
                            ImageURL = "category-6.jpg",
                            Name = "Monitor"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8066),
                            ImageURL = "category-7.jpg",
                            Name = "Audio & Video"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8085),
                            ImageURL = "category-8.jpg",
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8104),
                            ImageURL = "category-9.jpg",
                            Name = "Appliances"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8120),
                            ImageURL = "category-10.jpg",
                            Name = "Camera"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8138),
                            ImageURL = "category-11.jpg",
                            Name = "Cases"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8158),
                            ImageURL = "category-12.jpg",
                            Name = "Home Tech"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8176),
                            ImageURL = "category-1.jpg",
                            Name = "Notebooks"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 164, DateTimeKind.Local).AddTicks(8194),
                            ImageURL = "category-12.jpg",
                            Name = "Tops & Sets"
                        });
                });

            modelBuilder.Entity("Allup.Models.Features", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Free shipping on all US order",
                            ImageURL = "icon1.png",
                            Title = "Free Shipping"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Contact us 24 hours a day",
                            ImageURL = "icon2.png",
                            Title = "Support 24/7"
                        },
                        new
                        {
                            Id = 3,
                            Description = "You have 30 days to Return",
                            ImageURL = "icon3.png",
                            Title = "100% Money Back"
                        },
                        new
                        {
                            Id = 4,
                            Description = "If goods have problems",
                            ImageURL = "icon4.png",
                            Title = "90 Days Return"
                        },
                        new
                        {
                            Id = 5,
                            Description = "We ensure secure payment",
                            ImageURL = "icon5.png",
                            Title = "Payment Secure"
                        });
                });

            modelBuilder.Entity("Allup.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsBestseller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComputer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGameConsoles")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewArrival")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmartphone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpecialProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 3,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 157, DateTimeKind.Local).AddTicks(2547),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = true,
                            IsComputer = true,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            IsSpecialProduct = false,
                            Name = "Cale 6 eu accumsan massa facilisis Madden by Steve",
                            Price = 11.9,
                            StockCount = 189
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 159, DateTimeKind.Local).AddTicks(9444),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            DiscountPrice = 21.899999999999999,
                            IsBestseller = true,
                            IsComputer = false,
                            IsFeatured = true,
                            IsGameConsoles = true,
                            IsNewArrival = false,
                            IsSmartphone = false,
                            IsSpecialProduct = true,
                            Name = "Originals Kaval Wind breaker Winter Jacket eu...",
                            Price = 23.899999999999999,
                            StockCount = 25
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 6,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(1274),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = true,
                            IsComputer = false,
                            IsFeatured = false,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            IsSpecialProduct = false,
                            Name = "Madden by Steve Madden Cale 6 eu accumsan massa...",
                            Price = 11.9,
                            StockCount = 10
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2149),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = true,
                            IsComputer = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = false,
                            IsSmartphone = true,
                            IsSpecialProduct = false,
                            Name = "Water and Wind Resistant Insulated Jacket eu massa",
                            Price = 11.9,
                            StockCount = 101
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 4,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2240),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = true,
                            IsComputer = true,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            IsSpecialProduct = false,
                            Name = "Juicy Couture Solid Sleeve Puffer Jacket eu accumsan..",
                            Price = 18.899999999999999,
                            StockCount = 33
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2284),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = true,
                            IsComputer = false,
                            IsFeatured = false,
                            IsGameConsoles = true,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            IsSpecialProduct = false,
                            Name = "Cale 6 eu accumsan massa facilisis Madden by Steve",
                            Price = 29.899999999999999,
                            StockCount = 87
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 4,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2325),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = false,
                            IsComputer = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            IsSpecialProduct = true,
                            Name = "Winter Jacket eu accumsan massa facili originals Kaval Wind breaker",
                            Price = 23.899999999999999,
                            StockCount = 23
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2367),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = false,
                            IsComputer = false,
                            IsFeatured = true,
                            IsGameConsoles = true,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            IsSpecialProduct = false,
                            Name = "Juicy Couture Juicy Quilted Terry Track Jacket eu...",
                            Price = 35.899999999999999,
                            StockCount = 238
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2389),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = true,
                            IsComputer = false,
                            IsFeatured = false,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            IsSpecialProduct = true,
                            Name = "Trans-Weight Hooded Wind and Water Resistant Shell",
                            Price = 11.9,
                            StockCount = 235
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 5,
                            CategoryId = 14,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2409),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = false,
                            IsComputer = true,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = false,
                            IsSmartphone = false,
                            IsSpecialProduct = false,
                            Name = "New Balance Fresh Foam Kaymin eu accumsan massa...",
                            Price = 11.9,
                            StockCount = 25
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 5,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2428),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            IsBestseller = false,
                            IsComputer = false,
                            IsFeatured = true,
                            IsGameConsoles = false,
                            IsNewArrival = true,
                            IsSmartphone = true,
                            IsSpecialProduct = true,
                            Name = "New Balance Fresh Foam LAZR v1 Sport eu accumsan...",
                            Price = 18.899999999999999,
                            StockCount = 190
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 6,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 8, 9, 14, 48, 51, 160, DateTimeKind.Local).AddTicks(2471),
                            Description = "Block out the haters with the fresh adidas® Originals Kaval Windbreaker Jacket. Part of the Kaval Collection. Regular fit is eased, but not sloppy, and perfect for any activity. Plain-woven jacket specifically constructed for freedom of movement.",
                            DiscountPrice = 26.100000000000001,
                            IsBestseller = true,
                            IsComputer = false,
                            IsFeatured = false,
                            IsGameConsoles = true,
                            IsNewArrival = true,
                            IsSmartphone = false,
                            IsSpecialProduct = false,
                            Name = "New Balance Arishi Sport v1Couture Juicy eu",
                            Price = 29.0,
                            StockCount = 255
                        });
                });

            modelBuilder.Entity("Allup.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecond")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "product-1.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "product-2.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "product-3.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "product-4.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "product-5.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "product-6.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 7,
                            ImageURL = "product-7.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 8,
                            ImageURL = "product-8.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 9,
                            ImageURL = "product-3.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 10,
                            ImageURL = "product-9.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 11,
                            ImageURL = "product-10.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 12,
                            ImageURL = "product-11.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 13,
                            ImageURL = "product-12.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 14,
                            ImageURL = "product-16.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 15,
                            ImageURL = "product-6.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 16,
                            ImageURL = "product-13.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 17,
                            ImageURL = "product-14.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 18,
                            ImageURL = "product-15.jpg",
                            IsMain = false,
                            IsSecond = true,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 19,
                            ImageURL = "product-9.jpg",
                            IsMain = true,
                            IsSecond = false,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 20,
                            ImageURL = "product-12.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 21,
                            ImageURL = "product-9.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 22,
                            ImageURL = "product-5.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 23,
                            ImageURL = "product-13.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 24,
                            ImageURL = "product-15.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 25,
                            ImageURL = "product-8.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 26,
                            ImageURL = "product-10.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 27,
                            ImageURL = "product-17.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 28,
                            ImageURL = "product-7.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 29,
                            ImageURL = "product-13.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 30,
                            ImageURL = "product-6.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 31,
                            ImageURL = "product-8.jpg",
                            IsMain = false,
                            IsSecond = false,
                            ProductId = 11
                        });
                });

            modelBuilder.Entity("Allup.Models.Quotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email@yourwebsitename.com",
                            ImageURL = "author-1.png",
                            Name = "John Doe",
                            Quote = " An has feugiat vivendum, ad vix tacimates accusamus, cum commune lucilius no. Sit at alia civibus indoctum, ea mel regione percipit adipisci. Per modus nostrum vituperata no, eam ne magna solum constituam."
                        },
                        new
                        {
                            Id = 2,
                            Email = "ElonMusk@gmail.com",
                            ImageURL = "author-2.jpg",
                            Name = "Elon Musk",
                            Quote = "Some people don't like change, but you need to embrace change if the alternative is disaster."
                        },
                        new
                        {
                            Id = 3,
                            Email = "info@sony.com",
                            ImageURL = "author-3.png",
                            Name = "Sony PlayStation",
                            Quote = "Play Has No Limits."
                        });
                });

            modelBuilder.Entity("Allup.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Explore and immerse in exciting 360 content with Fulldive’s all-in-one virtual reality platform",
                            ImageURL = "slider-1.jpg",
                            Profit = "Save $120 when you buy",
                            Title = "<span>4K2020 Virtual Reality</span>Fulldive VR."
                        },
                        new
                        {
                            Id = 2,
                            Description = "Explore and immerse in exciting 360 content with Fulldive’s all-in-one virtual reality platform",
                            ImageURL = "slider-2.jpg",
                            Profit = "Save $120 when you buy",
                            Title = "<span>4K HDR Smart TV 43 </span>Sony Bravia."
                        });
                });

            modelBuilder.Entity("Allup.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Allup.Models.Product", b =>
                {
                    b.HasOne("Allup.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Allup.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Allup.Models.ProductImage", b =>
                {
                    b.HasOne("Allup.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Allup.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Allup.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Allup.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Allup.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
